# python3


"""
–ó–∞–¥–∞—á–∞. –í–∞–º –¥–∞–µ—Ç—Å—è —Å–µ—Ä–∏—è –≤—Ö–æ–¥—è—â–∏—Ö —Å–µ—Ç–µ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤, –∏ –≤–∞—à–∞ –∑–∞–¥–∞—á–∞ - —Å–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫—É.
–ü–∞–∫–µ—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
–î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –ø–∞–∫–µ—Ç–∞ ùëñ –≤—ã –∑–Ω–∞–µ—Ç–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –æ–Ω –ø—Ä–∏–±—ã–ª ùê¥ùëñ –∏ –≤—Ä–µ–º—è,
–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—É –¥–ª—è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ùëÉùëñ (–æ–±–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö).
–ï—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä, –∏ –æ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –ø–∞–∫–µ—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.
–ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –Ω–∞—á–∞–ª –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∫–æ–π-—Ç–æ –ø–∞–∫–µ—Ç, –æ–Ω –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è –∏ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è,
–ø–æ–∫–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —ç—Ç–æ–≥–æ –ø–∞–∫–µ—Ç–∞, –∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–∫–µ—Ç–∞ ùëñ –∑–∞–Ω–∏–º–∞–µ—Ç —Ä–æ–≤–Ω–æ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥.
–ö–æ–º–ø—å—é—Ç–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –ø–∞–∫–µ—Ç—ã, –∏–º–µ–µ—Ç —Å–µ—Ç–µ–≤–æ–π –±—É—Ñ–µ—Ä —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ ùëÜ.
–ö–æ–≥–¥–∞ –ø–∞–∫–µ—Ç—ã –ø—Ä–∏–±—ã–≤–∞—é—Ç, –æ–Ω–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±—É—Ñ–µ—Ä–µ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π.
–û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –±—É—Ñ–µ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω, –∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–∞–∫–µ—Ç
(–µ—Å—Ç—å ùëÜ –ø–∞–∫–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–±—ã–ª–∏ –¥–æ —ç—Ç–æ–≥–æ –ø–∞–∫–µ—Ç–∞, –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∏ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö),
–æ–Ω –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∏ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤–æ–æ–±—â–µ. –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞–∫–µ—Ç–æ–≤ –ø–æ—Å—Ç—É–ø–∞—é—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ,
–≤—Å–µ –æ–Ω–∏ —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±—É—Ñ–µ—Ä–µ (–∏–∑-–∑–∞ —ç—Ç–æ–≥–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–±—Ä–æ—à–µ–Ω—ã - —Ç–µ,
–∫–æ—Ç–æ—Ä—ã–µ –æ–ø–∏—Å–∞–Ω—ã –Ω–∏–∂–µ –≤–æ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö).
–ö–æ–º–ø—å—é—Ç–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞–∫–µ—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞,
–∫–∞–∫ —Ç–æ–ª—å–∫–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ. –ï—Å–ª–∏ –≤ –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –∑–∞–Ω—è—Ç –∏ –≤ –±—É—Ñ–µ—Ä–µ –Ω–µ—Ç –ø–∞–∫–µ—Ç–æ–≤,
–∫–æ–º–ø—å—é—Ç–µ—Ä –ø—Ä–æ—Å—Ç–æ –æ–∂–∏–¥–∞–µ—Ç –ø—Ä–∏–±—ã—Ç–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–∞–∫–µ—Ç–∞.
–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–∞–∫–µ—Ç –ø–æ–∫–∏–¥–∞–µ—Ç –±—É—Ñ–µ—Ä –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤ –±—É—Ñ–µ—Ä–µ,
–∫–∞–∫ —Ç–æ–ª—å–∫–æ –∫–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫—É.


–§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞.
–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑–º–µ—Ä ùëÜ –±—É—Ñ–µ—Ä–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ùëõ –≤—Ö–æ–¥—è—â–∏—Ö —Å–µ—Ç–µ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤.
–í –∫–∞–∂–¥–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö ùëõ —Å—Ç—Ä–æ–∫ –∑–∞–ø–∏—Å–∞–Ω–æ –ø–æ –¥–≤–∞ —á–∏—Å–ª–∞.
ùëñ-—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è ùê¥ùëñ –∏ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ùëÉùëñ (–æ–±–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö) ùëñ-–≥–æ –ø–∞–∫–µ—Ç–∞.
–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω –ø—Ä–∏–±—ã—Ç–∏—è –Ω–µ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è
(–æ–¥–Ω–∞–∫–æ –æ–Ω–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ—á–Ω–æ —Ç–∞–∫–æ–µ –∂–µ –≤—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö - –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –ø–∞–∫–µ—Ç,
–∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤—Ö–æ–¥–µ —Ä–∞–Ω—å—à–µ, —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–∏–±—ã–≤—à–∏–º —Ä–∞–Ω—å—à–µ).

–ß—Ç–æ –¥–µ–ª–∞—Ç—å
–ß—Ç–æ–±—ã —Ä–µ—à–∏—Ç—å —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –æ—á–µ—Ä–µ–¥—å
(–≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –æ—á–µ—Ä–µ–¥—å –¥–æ–ª–∂–Ω–∞ –ø–æ–∑–≤–æ–ª—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–º—É –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É,
–∏ —Ç–∞–∫–∞—è –æ—á–µ—Ä–µ–¥—å –æ–±—ã—á–Ω–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–≤—É—Ö—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π).
–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≤–∞–º–∏ —è–∑—ã–∫–µ.

–û–¥–Ω–æ –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–ø–∏—Å–∫–µ –∏–ª–∏ –æ—á–µ—Ä–µ–¥–∏ finish_time –≤—Ä–µ–º—è,
–∫–æ–≥–¥–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≤–µ—Ä—à–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–∞–∫–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å–µ—Ç–µ–≤–æ–º –±—É—Ñ–µ—Ä–µ, –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.
–ö–æ–≥–¥–∞ –ø—Ä–∏–±—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π –ø–∞–∫–µ—Ç, –≤–∞–º —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å –Ω–∞—á–∞–ª–∞ finish_time –≤—Å–µ –ø–∞–∫–µ—Ç—ã,
–∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∫ –º–æ–º–µ–Ω—Ç—É –ø—Ä–∏–±—ã—Ç–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞.
–ó–∞—Ç–µ–º –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –≤ finish_time. –ï—Å–ª–∏ –±—É—Ñ–µ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω
(–≤ finish_time —É–∂–µ ùëÜ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è), –ø–∞–∫–µ—Ç –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è.
–í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ finish_time.
–ï—Å–ª–∏ –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ finish_time –ø—É—Å—Ç–æ, –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–∞—á–Ω–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ,
–∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –ø–æ—Å—Ç—É–ø–∏—Ç. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–∞—á–Ω–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞,
–∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –∑–∞–∫–æ–Ω—á–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑ –ø–∞–∫–µ—Ç–æ–≤, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –≤ finish_time
(–∑–¥–µ—Å—å –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É finish_time,
—á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–æ–≥–¥–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–∞—á–Ω–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞–∫–µ—Ç) .
–í–∞–º —Ç–∞–∫–∂–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–∏—Ç—å –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏,
–¥–æ–±–∞–≤–∏–≤ ùëÉùëñ –∫ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø–æ–º–µ—Å—Ç–∏–≤ –µ–≥–æ –≤ –∫–æ–Ω–µ—Ü finish_time.
–í–∞–º –Ω—É–∂–Ω–æ –Ω–µ –∑–∞–±—ã—Ç—å –≤—ã–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –≤–º–µ—Å—Ç–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏,
–∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç–µ –≤ finish_time.
"""

from collections import namedtuple, deque

Request = namedtuple("Request", ["arrived_at", "time_to_process"])
Response = namedtuple("Response", ["was_dropped", "started_at"])


class Buffer:
    def __init__(self, size):
        self.size = size
        self.finish_time = []

        self.__requests = deque(maxlen=size)
        self.__moment = 0  # ms

    def process(self, request):
        while len(self.__requests) and self.__requests[0] <= request.arrived_at:
            self.__requests.popleft()

        if len(self.__requests) == self.size:
            return Response(True, -1)
        elif len(self.__requests):
            last_request_end = self.__requests[-1]
            if request.arrived_at > last_request_end:
                self.__requests.append(
                    request.arrived_at + request.time_to_process)
                return Response(False, request.arrived_at)
            else:
                self.__requests.append(
                    last_request_end + request.time_to_process)
                return Response(False, last_request_end)
        else:
            self.__requests.append(
                request.arrived_at + request.time_to_process)
            return Response(False, request.arrived_at)


def process_requests(requests, buffer):
    responses = []
    for request in requests:
        responses.append(buffer.process(request))
    return responses


def main():
    buffer_size, n_requests = map(int, input().split())
    requests = []
    for _ in range(n_requests):
        arrived_at, time_to_process = map(int, input().split())
        requests.append(Request(arrived_at, time_to_process))

    buffer = Buffer(buffer_size)
    responses = process_requests(requests, buffer)

    for response in responses:
        print(response.started_at if not response.was_dropped else -1)


if __name__ == "__main__":
    main()
