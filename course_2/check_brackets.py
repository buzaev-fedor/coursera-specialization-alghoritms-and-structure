# python3

from collections import namedtuple

"""
–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ø—Ä–æ–±–ª–µ–º—É
–í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ –≤—ã —Ä–µ–∞–ª–∏–∑—É–µ—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –ø–æ–∑–≤–æ–ª—è—é—â—É—é —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —Ä–µ–¥–∞–∫—Ç–æ—Ä—É –Ω–∞—Ö–æ–¥–∏—Ç—å –æ—à–∏–±–∫–∏ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–∫–æ–±–æ–∫ –≤ –∫–æ–¥–µ.

–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
–ó–∞–¥–∞—á–∞. 
–í–∞—à –¥—Ä—É–≥ –¥–µ–ª–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤. 
–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ —Ñ—É–Ω–∫—Ü–∏–µ–π, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–∫–æ–±–æ–∫ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤. 
–ö–æ–¥ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª—é–±—ã–µ —Å–∫–æ–±–∫–∏ –∏–∑ –Ω–∞–±–æ—Ä–∞ [] {} (), 
–≥–¥–µ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–º–∏ —Å–∫–æ–±–∫–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è [, {, –∏ (–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ -],} –∏).
–î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –æ—à–∏–±–∫–µ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–∫–æ–±–æ–∫, 
–Ω–æ –∏ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ –≤ –∫–æ–¥–µ —Å –ø—Ä–æ–±–ª–µ–º–Ω–æ–π —Å–∫–æ–±–∫–æ–π. 
–ü–µ—Ä–≤—ã–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–π –Ω–µ—Å–æ–≤–ø–∞–¥–∞—é—â–µ–π –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–∏, 
–∫–æ—Ç–æ—Ä–∞—è –ª–∏–±–æ –Ω–µ –∏–º–µ–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ –Ω–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä] –≤] (), 
–ª–∏–±–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –æ—Ç–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä,} –≤ () [}. 
–ï—Å–ª–∏ —Ç–∞–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ—Ç, 
–æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –ø–µ—Ä–≤—É—é –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –æ—Ç–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–∏ –ø–æ—Å–ª–µ –Ω–µ–µ, 
–Ω–∞–ø—Ä–∏–º–µ—Ä (–≤ {} ([]. –ï—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç, —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, 
—á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫–æ–±–æ–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.
–ü–æ–º–∏–º–æ —Å–∫–æ–±–æ–∫, –∫–æ–¥ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–∏–µ –∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è.
–ë–æ–ª–µ–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ, –≤—Å–µ —Å–∫–æ–±–∫–∏ –≤ –∫–æ–¥–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –Ω–∞ –ø–∞—Ä—ã —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫, 
—Ç–∞–∫ —á—Ç–æ –≤ –∫–∞–∂–¥–æ–π –ø–∞—Ä–µ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∞—è —Å–∫–æ–±–∫–∞ –∏–¥–µ—Ç –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–æ–π, 
–∞ –¥–ª—è –ª—é–±—ã—Ö –¥–≤—É—Ö –ø–∞—Ä —Å–∫–æ–±–æ–∫ –æ–¥–Ω–∞ –∏–∑ –Ω–∏—Ö –≤–ª–æ–∂–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–æ–π, –∫–∞–∫ –≤ ( foo [bar]) –∏–ª–∏ –æ–Ω–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã, 
–∫–∞–∫ –≤ f (a, b) -g [c]. –°–∫–æ–±–∫–∞ [—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–∫–æ–±–∫–µ], {—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç} –∏ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç). 

–§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. 
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É ùëÜ, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ –±–æ–ª—å—à–∏—Ö –∏ –º–∞–ª–µ–Ω—å–∫–∏—Ö –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö –±—É–∫–≤, 
—Ü–∏—Ñ—Ä, –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ —Å–∫–æ–±–æ–∫ –∏–∑ –Ω–∞–±–æ—Ä–∞ [] {} (). 

–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞
–ï—Å–ª–∏ –∫–æ–¥ –≤ S –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∫–æ–±–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –≤—ã–≤–µ–¥–∏—Ç–µ ¬´Success¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫). 
–í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã–≤–µ–¥–∏—Ç–µ –æ—Ç—Å—á–∏—Ç—ã–≤–∞–µ–º—ã–π –æ—Ç 1 –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–π –Ω–µ—Å–æ–≤–ø–∞–¥–∞—é—â–µ–π –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–∏, 
–∞ –µ—Å–ª–∏ –Ω–µ—Ç –Ω–µ—Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫, –≤—ã–≤–µ–¥–∏—Ç–µ –æ—Ç—Å—á–∏—Ç—ã–≤–∞–µ–º—ã–π –æ—Ç 1 –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–∞—è –æ—Ç–∫—Ä—ã–≤–∞—é—â–∞—è—Å—è —Å–∫–æ–±–∫–∞, 
–Ω–µ –∏–º–µ—é—â–∞—è —Å–µ–±–µ —Ä–∞–≤–Ω—ã—Ö. 

–ü—Ä–∏–º–µ—Ä 1

[] {}
Success

–ü—Ä–∏–º–µ—Ä 2

{
1

–ü—Ä–∏–º–µ—Ä 3

{[}
3

–ü—Ä–∏–º–µ—Ä 4

foo(bar);
Success

–ü—Ä–∏–º–µ—Ä 5

foo(bar[i);
10
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
) –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç [, –ø–æ—ç—Ç–æ–º—É) —è–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–≤–æ–π –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–æ–π, 
—É –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, –ø–æ—ç—Ç–æ–º—É –º—ã –≤—ã–≤–æ–¥–∏–º –µ–µ –ø–æ–∑–∏—Ü–∏—é, —Ä–∞–≤–Ω—É—é 10. 
"""


class Bracket:
    def __init__(self, bracket_type, position):
        self.bracket_type = bracket_type
        self.position = position

    def Match(self, c):
        if self.bracket_type == '[' and c == ']':
            return True
        if self.bracket_type == '{' and c == '}':
            return True
        if self.bracket_type == '(' and c == ')':
            return True
        return False


def find_mismatch(text):
    result = True
    opening_brackets_stack = []
    for i, next in enumerate(text):
        if next in "([{":
            opening_brackets_stack.append(Bracket(next, i))

        elif next in [")", "]", "}"]:
            if not opening_brackets_stack:
                result = i + 1
                break
            else:
                bracket = opening_brackets_stack[-1]
                result = bracket.Match(next)
                if result:
                    del opening_brackets_stack[-1]
                else:
                    result = i + 1
                    break
    return result, opening_brackets_stack


def main():
    text = input()
    mismatch, opening_brackets_stack = find_mismatch(text)
    if mismatch and isinstance(mismatch, type(
            True)) and not opening_brackets_stack:
        print("Success")
    elif mismatch and isinstance(mismatch, type(True)):
        print(opening_brackets_stack[-1].position + 1)
    else:
        print(mismatch)


if __name__ == "__main__":
    main()
