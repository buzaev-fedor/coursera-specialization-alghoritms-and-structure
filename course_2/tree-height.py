# python3


"""
–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ø—Ä–æ–±–ª–µ–º—É
–î–µ—Ä–µ–≤—å—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏,
—Ç–∞–∫–∏–º–∏ –∫–∞–∫ –∏–µ—Ä–∞—Ä—Ö–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–¥–∞–≤—Ü–∞ –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ.
–û–Ω–∏ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∞—à–∏–Ω–Ω–æ–º –æ–±—É—á–µ–Ω–∏–∏ –∫–∞–∫ –¥–ª—è –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–π –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏,
—Ç–∞–∫ –∏ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π, –≤ —Ç–æ–º —á–∏—Å–ª–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤,
—Ç–∞–∫–∏—Ö –∫–∞–∫ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –±—É—Å—Ç–∏–Ω–≥ –ø–æ –¥–µ—Ä–µ–≤—å—è–º —Ä–µ—à–µ–Ω–∏–π –∏ —Å–ª—É—á–∞–π–Ω—ã–º –ª–µ—Å–∞–º.
–í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –º–æ–¥—É–ª—è—Ö —ç—Ç–æ–≥–æ –∫—É—Ä—Å–∞ –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–º –≤–∞—Å —Å–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–≤–æ–∏—á–Ω—ã–º–∏ –¥–µ—Ä–µ–≤—å—è–º–∏ –ø–æ–∏—Å–∫–∞ (BST) -
–æ—Å–æ–±—ã–º –≤–∏–¥–æ–º –¥–µ—Ä–µ–≤—å–µ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –æ—á–µ–Ω—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å, –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏ –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ.
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ BST –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
–∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤ –ª—é–±—ã—Ö –Ω–µ—Ç—Ä–∏–≤–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö,
–æ–±—ã—á–Ω–æ —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.
–í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ –≤–∞—à–∞ —Ü–µ–ª—å - –ø—Ä–∏–≤—ã–∫–Ω—É—Ç—å –∫ –¥–µ—Ä–µ–≤—å—è–º.
–í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ –∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö,
—Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–µ—Ä–µ–≤–æ –∏ –≤—ã—á–∏—Å–ª–∏—Ç—å –µ–≥–æ –≤—ã—Å–æ—Ç—É.

–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
–ó–∞–¥–∞—á–∞. –í–∞–º –¥–∞–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ —Å –∫–æ—Ä–Ω—è–º–∏.
–í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –≤—ã—á–∏—Å–ª–∏—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤—ã—Å–æ—Ç—É.
–ù–∞–ø–æ–º–Ω–∏–º, —á—Ç–æ –≤—ã—Å–æ—Ç–∞ (–∫–æ—Ä–Ω–µ–≤–æ–≥–æ) –¥–µ—Ä–µ–≤–∞ - —ç—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —É–∑–ª–∞ –∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ª–∏—Å—Ç–∞ –¥–æ –∫–æ—Ä–Ω—è.
–í–∞–º –¥–∞–Ω–æ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –¥–µ—Ä–µ–≤–æ, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–≤–æ–∏—á–Ω–æ–µ.
–§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤ ùëõ.
–í–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ ùëõ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç ‚àí1 –¥–æ ùëõ - 1 - —Ä–æ–¥–∏—Ç–µ–ª–∏ —É–∑–ª–æ–≤.
–ï—Å–ª–∏ ùëñ-–π –∏–∑ –Ω–∏—Ö (0 ‚â§ ùëñ ‚â§ ùëõ - 1) —Ä–∞–≤–µ–Ω -1, —É–∑–µ–ª ùëñ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä–Ω–µ–º,
–≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —ç—Ç–æ –æ—Ç—Å—á–∏—Ç—ã–≤–∞–µ–º—ã–π –æ—Ç 0 –∏–Ω–¥–µ–∫—Å —Ä–æ–¥–∏—Ç–µ–ª—è ùëñ-–≥–æ —É–∑–ª–∞.
–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –∫–æ—Ä–µ–Ω—å. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –¥–µ—Ä–µ–≤–æ.


–ü—Ä–∏–º–µ—Ä 1
5
4 -1 4 1 1

3

–í–≤–æ–¥ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∏–º–µ–µ—Ç—Å—è 5 —É–∑–ª–æ–≤ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –æ—Ç 0 –¥–æ 4, —É–∑–µ–ª 0 - –¥–æ—á–µ—Ä–Ω–∏–π —É–∑–µ–ª 4, —É–∑–µ–ª 1 - –∫–æ—Ä–µ–Ω—å,
—É–∑–µ–ª 2 - –¥–æ—á–µ—Ä–Ω–∏–π —É–∑–µ–ª 4, —É–∑–µ–ª 3 - –¥–æ—á–µ—Ä–Ω–∏–π —É–∑–µ–ª 1 –∏ —É–∑–µ–ª 4. —è–≤–ª—è–µ—Ç—Å—è –¥–æ—á–µ—Ä–Ω–∏–º –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ —É–∑–ª—É 1.
–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —ç—Ç–æ, –¥–∞–≤–∞–π—Ç–µ –Ω–∞–ø–∏—à–µ–º –Ω–æ–º–µ—Ä–∞ —É–∑–ª–æ–≤ –æ—Ç 0 –¥–æ 4 –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ,
–∞ —á–∏—Å–ª–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤–æ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–∏–∂–µ:
0 1234
4‚Äì1 4 1 1
–¢–µ–ø–µ—Ä—å –º—ã –≤–∏–¥–∏–º, —á—Ç–æ —É–∑–µ–ª –Ω–æ–º–µ—Ä 1 —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä–Ω–µ–º, –ø–æ—Ç–æ–º—É —á—Ç–æ -1 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –µ–º—É –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ.
–¢–∞–∫–∂–µ –º—ã –∑–Ω–∞–µ–º, —á—Ç–æ —É–∑–ª—ã –Ω–æ–º–µ—Ä 3 –∏ –Ω–æ–º–µ—Ä 4 —è–≤–ª—è—é—Ç—Å—è –¥–æ—á–µ—Ä–Ω–∏–º–∏ –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É —É–∑–ª—É 1.
–¢–∞–∫–∂–µ –º—ã –∑–Ω–∞–µ–º, —á—Ç–æ —É–∑–ª—ã –Ω–æ–º–µ—Ä 0 –∏ –Ω–æ–º–µ—Ä 2 —è–≤–ª—è—é—Ç—Å—è –¥–æ—á–µ—Ä–Ω–∏–º–∏ —É–∑–ª–∞–º–∏ —É–∑–ª–∞ 4.



"""

import sys
import threading
from collections import deque

sys.setrecursionlimit(10 ** 7)  # max depth of recursion
threading.stack_size(2 ** 27)  # new thread will get stack of such size


class Node:
    def __init__(self, name):
        self.name = name
        self.children = []

    def add_child(self, child_index):
        self.children.append(child_index)

    def __str__(self):
        children_names = [child.name for child in self.children]
        return f"Node #{self.name} children: {children_names}"

    def __repr__(self):
        children_names = [child.name for child in self.children]
        return f"Node #{self.name} children: {children_names}"


class TreeHeight:
    def __init__(self, parent):
        self.parent = parent
        self.n = len(self.parent)

        if -1 not in self.parent:
            raise ValueError("No root node!")

        self.nodes = [Node(i) for i in range(self.n)]

        for child_index in range(self.n):
            parent_index = self.parent[child_index]
            if parent_index == -1:
                self.root = child_index
            else:
                self.nodes[parent_index].add_child(self.nodes[child_index])

    def compute_height(self):
        d = deque()
        d.append(self.nodes[self.root])
        height = 0

        while len(d):
            height += 1
            for i in range(len(d)):
                node = d.popleft()

                for child in node.children:
                    d.append(child)

        return height


def main():
    n = int(input())
    parents = list(map(int, input().split()))
    tree = TreeHeight(parents)
    print(tree.compute_height())


threading.Thread(target=main).start()
