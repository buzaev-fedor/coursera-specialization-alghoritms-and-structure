# Uses python3
import sys

"""
–í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ –≤—ã —Ä–µ–∞–ª–∏–∑—É–µ—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º –¥–≤–æ–∏—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞, 
–∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—á–µ–Ω—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏—Å–∫–∞—Ç—å 
(–¥–∞–∂–µ –≤ –æ–≥—Ä–æ–º–Ω—ã—Ö) —Å–ø–∏—Å–∫–∞—Ö –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω. 

–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
–¢–∞—Å–∫:
–¶–µ–ª—å—é —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –∫–æ–¥–∞ —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –¥–≤–æ–∏—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞. 

–§–æ—Ä–º–∞—Ç –∏–Ω–ø—É—Ç–∞:
–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ùëõ –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å ùëé0 <ùëé1 <. . . <ùëéùëõ ‚àí 1 
–∏–∑ ùëõ –ø–æ–ø–∞—Ä–Ω–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è. 
–í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ùëò –∏ ùëò –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ ùëè0, ùëè1,. . . , ùëèùëò ‚àí 1. 

–§–æ—Ä–º–∞—Ç –æ—Ç–ø—É—Ç–∞
–î–ª—è –≤—Å–µ—Ö –æ—Ç 0 –¥–æ ‚àí 1, –≤—ã—Ö–æ–¥–Ω–æ–π –∏–Ω–¥–µ–∫—Å 0 ‚àí 1 —Ç–∞–∫–æ–π, —á—Ç–æ = if –∏–ª–∏ ‚àí1, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
—Ç–∞–∫–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –Ω–µ—Ç. 
"""


def binary_search(a, x):
    left, right = 0, len(a) - 1
    while left <= right:
        middle = (left + right) // 2
        # print(f"{middle} : {x}")
        if x == a[middle]:
            return middle
        if a[middle] > x:
            right = middle - 1
        elif a[middle] < x:
            left = middle + 1
    return -1


def linear_search(a, x):
    for i in range(len(a)):
        if a[i] == x:
            return i
    return -1


if __name__ == '__main__':
    input = sys.stdin.read()
    data = list(map(int, input.split()))
    n = data[0]
    m = data[n + 1]
    a = data[1: n + 1]
    for x in data[n + 2:]:
        # replace with the call to binary_search when implemented
        print(binary_search(a, x), end=' ')

# n = 5
# a = [1, 5, 8, 12, 13]
# data = [5, 1, 5, 8, 12, 13]
# # n = data[0]
# # m = data[n + 1]
# # a = data[1: n + 1]
# for x in data[n + 2:]:
#     print(data)
#     # replace with the call to binary_search when implemented
#     print(linear_search(a, x), end=' ')
