# Uses python3
import sys

"""
ะะฒะตะดะตะฝะธะต ะฒ ะทะฐะดะฐัั
ะะฑัะฐัะตะฝะธะต ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััะธ ๐0, ๐1, ..., ๐๐ โ 1 - ััะพ ะฟะฐัะฐ ะธะฝะดะตะบัะพะฒ 0 โค ๐ <๐ <๐  ัะฐะบะฐั, ััะพ ๐๐ > ๐๐. 
ะะพะปะธัะตััะฒะพ ะธะฝะฒะตััะธะน ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััะธ ะฒ ะฝะตะบะพัะพัะพะผ ัะผััะปะต ะธะทะผะตััะตั, ะฝะฐัะบะพะปัะบะพ ะฑะปะธะทะบะฐ ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััั ะบ ัะพััะธัะพะฒะบะต. 
ะะฐะฟัะธะผะตั, ะพััะพััะธัะพะฒะฐะฝะฝะฐั (ะฒ ะฟะพััะดะบะต ัะฑัะฒะฐะฝะธั) ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััั ะฒะพะพะฑัะต ะฝะต ัะพะดะตัะถะธั ะธะฝะฒะตััะธะน, 
ัะพะณะดะฐ ะบะฐะบ ะฒ ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััะธ, ะพััะพััะธัะพะฒะฐะฝะฝะพะน ะฒ ะฟะพััะดะบะต ัะฑัะฒะฐะฝะธั, 
ะปัะฑัะต ะดะฒะฐ ัะปะตะผะตะฝัะฐ ัะพััะฐะฒะปััั ะธะฝะฒะตััะธั (ะฒัะตะณะพ for (๐ - 1) / 2 ะธะฝะฒะตััะธะน) . 

ะะฟะธัะฐะฝะธะต ะฟัะพะฑะปะตะผั

ะะฐะดะฐัะฐ. ะฆะตะปั ััะพะน ะทะฐะดะฐัะธ - ะฟะพะดััะธัะฐัั ะบะพะปะธัะตััะฒะพ ะธะฝะฒะตััะธะน ะดะฐะฝะฝะพะน ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััะธ. 

ะคะพัะผะฐั ะธะฝะฟััะฐ
ะ ะฟะตัะฒะพะน ัััะพะบะต ะทะฐะฟะธัะฐะฝะพ ัะตะปะพะต ัะธัะปะพ ๐, ะฒ ัะปะตะดัััะตะน - ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััั ัะตะปัั ัะธัะตะป.
๐0, ๐1, ..., ๐๐ โ 1. 

ะคะพัะผะฐั ะฒัะฒะพะดะฐ
ะัะฒะตะดะธัะต ะบะพะปะธัะตััะฒะพ ะธะฝะฒะตััะธะน ะฒ ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััะธ. 

ะัะธะผะตั
ะะฒะพะด
5
23929
ะัะฒะพะด
2

ะงัะพ ะฝะฐะดะพ ะดะตะปะฐัั
ะญัั ะฟัะพะฑะปะตะผั ะผะพะถะฝะพ ัะตัะธัั, ะธะทะผะตะฝะธะฒ ะฐะปะณะพัะธัะผ ัะพััะธัะพะฒะบะธ ัะปะธัะฝะธะตะผ. 
ะะปั ััะพะณะพ ะผั ะธะทะผะตะฝะธะผ ะพะฑะต ะฟัะพัะตะดััั Merge ะธ MergeSort ัะปะตะดัััะธะผ ะพะฑัะฐะทะพะผ: 

Merge (๐ต, ๐ถ) ะฒะพะทะฒัะฐัะฐะตั ัะตะทัะปััะธััััะธะน ะพััะพััะธัะพะฒะฐะฝะฝัะน ะผะฐััะธะฒ ะธ ะบะพะปะธัะตััะฒะพ ะฟะฐั (๐, such) ัะฐะบะธั, ััะพ ๐ โ ๐ต, ๐ โ ๐ถ ะธ ๐> ๐; 

MergeSort (๐ด) ะฒะพะทะฒัะฐัะฐะตั ะพััะพััะธัะพะฒะฐะฝะฝัะน ะผะฐััะธะฒ ๐ด ะธ ะบะพะปะธัะตััะฒะพ ะธะฝะฒะตััะธะน ะฒ ๐ด. 

"""


def get_number_of_inversions(a, b, left, right):
    number_of_inversions = 0
    if right - left <= 1:
        return number_of_inversions
    ave = (left + right) // 2
    number_of_inversions += get_number_of_inversions(a, b, left, ave)
    number_of_inversions += get_number_of_inversions(a, b, ave, right)
    # write your code here
    return number_of_inversions


if __name__ == '__main__':
    input = sys.stdin.read()
    n, *a = list(map(int, input.split()))
    b = n * [0]
    print(get_number_of_inversions(a, b, 0, len(a)))
