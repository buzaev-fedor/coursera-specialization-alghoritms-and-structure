# Uses python3
import sys
import math

"""
Введение

Как мы уже знаем, естественная жадная стратегия решения проблемы изменений 
не работает корректно ни для одного набора номиналов. 
Например, если доступны номиналы 1, 3 и 4, жадный алгоритм изменит 6 центов, используя три монеты (4 + 1 + 1), 
в то время как его можно изменить, используя всего две монеты (3 + 3). 
Теперь ваша цель - применить динамическое программирование для решения проблемы размены денег для купюр 1, 3 и 4. 

Описание проблемы

Формат инпута
Целочисленные деньги

Формат оутпута
Минимальное количество монет номиналом 1, 3, 4, разменяющих деньги. 

Пример 1

2 
2
(2 = 1 + 1)

Пример два

34
9
(34 = 3 + 3 + 4 + 4 + 4 + 4 + 4 + 4 + 4)

"""


def get_change(money):
    min_num_coins = [0] + [math.inf] * money
    coins = [1, 3, 4]
    for m in range(1, money + 1):
        for coin in coins:
            if m >= coin:
                num_coins = min_num_coins[m - coin] + 1
                if num_coins < min_num_coins[m]:
                    min_num_coins[m] = num_coins

    return min_num_coins[money]


if __name__ == '__main__':
    money = int(sys.stdin.read())
    print(get_change(money))
